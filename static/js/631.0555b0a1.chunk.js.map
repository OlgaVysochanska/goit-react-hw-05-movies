{"version":3,"file":"static/js/631.0555b0a1.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAASM,IAAT,iBAAuBI,IADlB,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNU,MAAOD,KAHoB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,SANmB,2CAAH,sDASjBM,EAAO,mCAAG,WAAMJ,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,aADF,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKQ,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMN,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,yGCOvB,UAnCiB,WACf,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQR,GAAOS,EAAAA,EAAAA,MAAPT,GAcR,OAZAU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKP,EAAAA,EAAAA,IAAQJ,GAFb,OAERH,EAFQ,OAGdW,EAAQX,GAHM,gDAKde,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDAQfH,GACD,GAAE,CAACX,KAGF,wBACGK,EAAKU,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,0BACGA,IACC,gBACEC,IAAG,0CAAqCD,GACxCE,IAAI,GACJC,MAAM,SAGV,uBAAIL,KACJ,uBAAIC,MATGjB,EADD,KAef,C","sources":["components/shared/services/moviesAPI.js","pages/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '2e2f33ab3b306dc2bda4020a62b18b17',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'components/shared/services/moviesAPI';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCast(id);\n        setCast(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  return (\n    <ul>\n      {cast.map(({ id, name, character, profile_path }) => (\n        <li key={id}>\n          {profile_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n              alt=\"\"\n              width=\"200\"\n            ></img>\n          )}\n          <p>{name}</p>\n          <p>{character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default CastPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","fetchMovieById","id","fetchMovieByQuery","keyword","query","getCast","cast","getReviews","useState","setCast","useParams","useEffect","fetchCast","console","log","message","map","name","character","profile_path","src","alt","width"],"sourceRoot":""}